{"version":3,"sources":["Header.js","SidebarOption.js","Sidebar.js","Section.js","EmailList.js","Mail.js","App.js","features/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","className","IconButton","src","alt","placeholder","type","Avatar","SidebarOption","Icon","title","number","selected","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Section","color","style","borderBottom","EmailList","Checkbox","PeopleIcon","LocalOfferIcon","Mail","App","path","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23505f11.chunk.js","sourcesContent":["import \"./Header.css\";\r\nimport React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { IconButton, Avatar } from \"@material-ui/core\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <IconButton>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <img src=\"https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r2.png\" alt=\"gmail\"/>\r\n            </div>\r\n            <div className=\"header__middle\">\r\n                <SearchIcon/>\r\n                <input placeholder=\"Search email\" type=\"text\" />\r\n                <ArrowDropDownIcon className=\"header__inputCaret\"/>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n                <Avatar />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({Icon, title, number, selected}) {\r\n    return (\r\n        <div className={`sidebarOption ${selected && \"sidebarOption--active\"}`}>\r\n            <Icon />\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React from 'react'\r\nimport \"./Sidebar.css\";\r\nimport { Button,IconButton } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\"\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport StarIcon from \"@material-ui/icons/Star\"\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\n\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Button\r\n                startIcon={<AddIcon fontSize=\"large\" />}\r\n                className=\"sidebar__compose\">\r\n            Compose\r\n            </Button>\r\n\r\n            <SidebarOption Icon={InboxIcon} title=\"Inbox\" number={54} selected={true }/>\r\n            <SidebarOption Icon={StarIcon} title=\"Starred\" number={56} />\r\n            <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={54} />\r\n            <SidebarOption Icon={NearMeIcon} title=\"Send\" number={5} />\r\n            <SidebarOption Icon={NoteIcon} title=\"Drafts\" number={54} />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={54} />\r\n            <div className=\"sidebar__footer\">\r\n                <div className=\"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport \"./Section.css\";\r\n\r\nfunction Section({ Icon, title, color,  selected}) {\r\n    return (\r\n        <div className={`section ${selected && 'section--selected'}`}\r\n        style={{\r\n            borderBottom: `3px solid ${color}`,\r\n            color : `${selected && color}`,\r\n        }}\r\n        >\r\n            <Icon />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section\r\n","import React from 'react'\r\nimport { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport \"./EmailList.css\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport Section from './Section';\r\n\r\n\r\nfunction EmailList() {\r\n    return (\r\n        <div className=\"emailList\">\r\n            <div className=\"emailList__setting\">\r\n                <div className=\"emailList__settingLeft\">\r\n                    <Checkbox />\r\n\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n               \r\n            </div>\r\n            <div className=\"emailList__sections\">\r\n                    <Section Icon={InboxIcon} title=\"primary\" color=\"red\" selected />\r\n                    <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" selected />\r\n                    <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" selected />\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailList\r\n","import React from 'react'\r\nimport './Mail.css';\r\n\r\nfunction Mail() {\r\n    return (\r\n        <div className=\"mail\">\r\n            hidddddddddddddddd\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport {BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport EmailList from \"./EmailList\";\r\nimport Mail from \"./Mail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"app__body\">\r\n          <Sidebar />\r\n          <Switch>\r\n              <Route path=\"/mail\">\r\n                <Mail />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <EmailList />\r\n              </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}